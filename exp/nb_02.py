
#################################################
### THIS FILE WAS AUTOGENERATED! DO NOT EDIT! ###
#################################################
# file to edit: dev_nb/02_Fully_connected_NN.ipynb

import sys
sys.path.insert(0,"/content/drive/My Drive/Colab Notebooks/exp")
# sys.path.append("/content/drive/My Drive/Colab Notebooks/exp")
from nb_01 import *

def get_data():
  path = datasets.download_data(MNIST_URL, ext= '.gz')
  with gzip.open(path,'rb') as f:
    ((x_train, y_train), (x_valid, y_valid), _) = pickle.load(f,encoding='latin-1')
  return map(tensor, (x_train, y_train, x_valid, y_valid))

def normalise(x, m, s): return (x-m)/s

def test_near_zero(a,tol=1e-3):
  assert a.abs()<tol, f"Near zero: {a}"

from torch.nn import init

# unsqueeze() adds a column while squeeze removes a column
def mse(output, target):
  return (output.squeeze(-1) - target).pow(2).mean()

def test(a, b, cmp, cname=None):
  if cname is None: cname = cmp.__name__
  assert cmp(a, b), f'{cname}:\n{a}\n{b}'

def near(a,b):
  return torch.allclose(a, b, rtol=1e-3, atol=1e-5)

def test_near(a,b):
    test(a,b,near)


from torch import nn